language: python
install: pip3 install .
script: python -m unittest discover -p test_*.py
jobs:
  include:
    - name: "Python 3.8 on Linux, generate test coverage"
      python: 3.8
      before_install:
        - sudo apt-get install xclip
        - sudo apt-get install xvfb
        - pip3 install codecov
        - pip3 install flake8
      after_success: codecov
      stage: test
      script: XDG_SESSION_TYPE=x11 xvfb-run coverage run --source refinery run-tests.py
    - name: "Python 3.9 on Linux"
      python: 3.9
      before_install:
        - sudo apt-get install xclip
        - sudo apt-get install xvfb
        - pip3 install codecov
        - pip3 install flake8
      script: XDG_SESSION_TYPE=x11 xvfb-run python3 -m unittest discover -p test_*.py
    - name: "Python 3.8+ on macOS"
      before_install:
        - brew install libmagic
        - pip3 install flake8
      os: osx
      script: python3 -m unittest discover -p test_*.py
      osx_image: xcode11.2
      language: shell
    - name: "Python 3.8 on Windows"
      os: windows
      language: shell
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python --version 3.8 -y
        - python -m pip install --upgrade pip flake8
    - name: "Python 3.9 on Windows"
      python: 3.9
      os: windows
      language: shell
      env: PATH=/c/Python39:/c/Python39/Scripts:$PATH
      before_install:
        - choco install python --version 3.9 -y
        - python -m pip install --upgrade pip flake8
    - name: "Deploy Documentation"
      python: 3.8
      stage: deploy
      script: python run-pdoc3.py --current-environment
      deploy:
        provider: pages
        repo: binref/binref.github.io
        target_branch: master
        local_dir: html/refinery
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        keep_history: false
    - name: "Deploy PyPi"
      python: 3.8
      script: true
      deploy:
        provider: pypi
        user: "__token__"
        password: $PYPI_TOKEN
        distributions: "sdist bdist_wheel"
        skip_existing: true
        on:
          tags: true